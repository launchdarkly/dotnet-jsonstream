<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Version>1.0.0</Version>
    <!--
      The reason there's a mechanism here for overriding the target frameworks with
      an environment variable is that we want to be able to run CI tests using older
      SDKs which do not consider "net5.0" to be a valid target framework that can be
      referenced in a project file.
    -->
    <BuildFrameworks Condition="'$(BUILDFRAMEWORKS)' == ''">netstandard2.0;netcoreapp3.1;net5.0;net452;net461;monoandroid7.1;xamarin.ios1.0</BuildFrameworks>
    <TargetFrameworks>$(BUILDFRAMEWORKS)</TargetFrameworks>
    <LangVersion>7.3</LangVersion>
    <AssemblyName>LaunchDarkly.JsonStream</AssemblyName>
    <OutputType>Library</OutputType>
    <PackageId>LaunchDarkly.JsonStream</PackageId>
    <Description>LaunchDarkly streaming JSON encoder/decoder</Description>
    <Company>LaunchDarkly</Company>
    <Authors>LaunchDarkly</Authors>
    <Owners>LaunchDarkly</Owners>
    <Copyright>Copyright 2020 LaunchDarkly</Copyright>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\LaunchDarkly.JsonStream.xml</DocumentationFile>
  </PropertyGroup>

  <!-- System.Text.Json is built into the standard library in .NET Core 3.x and .NET 5.0.
       It is available as a NuGet package in .NET Standard 2.0 and .NET Framework 4.6.1.
       It is not available in .NET Framework 4.5.2. -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' or '$(TargetFramework)' == 'net461'">
    <PackageReference Include="System.Text.Json" Version="5.0.0" />
  </ItemGroup>

  <!-- We want to use System.Text.Json in all platforms where it is either built into the
       standard library, or available as a NuGet package... *except* Xamarin, where it
       currently has compatibility problems (https://github.com/dotnet/runtime/issues/31326) -->
  <PropertyGroup Condition="'$(TargetFramework)' != 'net452'
                            and '$(TargetFramework)' != 'monoandroid7.1'
                            and '$(TargetFramework)' != 'xamarin.ios1.0'">
    <!-- USE_SYSTEM_TEXT_JSON is what we look for in conditionally-compiled code -->
    <DefineConstants>$(DefineConstants);USE_SYSTEM_TEXT_JSON</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Implementation\" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release' and '$(BuildBenchmarks)'==''">
    <!-- The environment BUILDBENCHMARKS is set in our CI build for benchmarks. BenchmarkDotNet
         requires code to be built in the Release configuration, but we don't want to have to
         bother with signing (which requires a credential that we can't easily access in CI)
         unless we're building a real release. -->
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>../../LaunchDarkly.JsonStream.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
</Project>
